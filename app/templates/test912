<!--這是淺取正方形的版本-->
<html>
<head></head>
<body bgcolor="#fff">
<canvas width="800" height="800" id="myCanvas2" style="border:auto solid;position:absolute;top:100;left:100;"></canvas>  <!--first law picture-->

<input type="button" id="save" value="在新視窗開啟圖片">

<div id="color" style="width:auto ;height:50px;float:left"></div>


{% load staticfiles %}

<script>

var drawMode, mx, my;
var bx,by;


var img = new Image();
img.src = "{% static 'img/heart.jpg' %}";  //load img
var canvas2 = document.getElementById("myCanvas2"); // 取得物件
var ctx2 = canvas2.getContext("2d"); // 取得繪圖環境 圖片
img.onload = function() {
  ctx2.drawImage(img, 0, 0);
  img.style.display = 'none';
};



//clip

function clippingPath(pathPoints,img,x,y){

        // save the unclipped context
        ctx2.save();

        // define the path that will be clipped to
        ctx2.beginPath();
        ctx.moveTo(pathPoints[0],pathPoints[1]);
        // this demo has a known number of polygon points
        // but include a loop of "lineTo's" if you have a variable number of points
        ctx.lineTo(pathPoints[2],pathPoints[3]);
        ctx.lineTo(pathPoints[4],pathPoints[5]);
        ctx2.closePath();

        // stroke the path
        // half of the stroke is outside the path
        // the outside part of the stroke will survive the clipping that follows
        ctx2.lineWidth=2;
        ctx2.stroke();

        // make the current path a clipping path
        ctx2.clip();

        // draw the image which will be clipped except in the clipping path
        ctx2.drawImage(img,x,y);

        // restore the unclipped context (==undo the clipping path)
        ctx2.restore();
        var clippedImg=document.getElementById("clipped");
        clippedImg.src=canvas.toDataURL();

    }




var color = document.getElementById('color');
function pick(event) {
  var x = event.layerX;
  var y = event.layerY;
  var pixel = ctx2.getImageData(x, y, 1, 1);
  var data = pixel.data;
  var rgba = 'rgba(' + data[0] + ',' + data[1] +
             ',' + data[2] + ',' + data[3] + ')';
  color.style.background =  "#fff";
  color.textContent = 'x:'+ x +'y:'+ y + ','+rgba;
}
canvas2.addEventListener('mousemove', pick);



canvas2.onmousedown = function(ev){
    ctx2.save();
    ctx2.beginPath();
    ctx2.strokeStyle = "#00f";
    ctx2.lineWidth = 1;
    mx = event.clientX - parseInt(canvas2.style.left) + window.pageXOffset;
    my = event.clientY - parseInt(canvas2.style.top) + window.pageYOffset;
    ctx2.moveTo(mx, my);
    bx = mx;
    bx = my;
    drawMode = true;
}

canvas2.onmousemove = function(ev){
    if(drawMode){
        mx = event.clientX - parseInt(canvas2.style.left) + window.pageXOffset;
        my = event.clientY - parseInt(canvas2.style.top) + window.pageYOffset;
        ctx2.lineTo(mx, my);
        ctx2.stroke();
    }
}

canvas2.onmouseup = function(){
  ctx2.closePath();//結束時自動連回beginpath
  ctx2.stroke();

    drawMode = false;
}
canvas2.onclick = function(){


  ctx2.clip();
  ctx2.drawImage(img,141,63);
  ctx2.restore();

}

document.getElementById("save").onclick = function(){
    ctx2.globalCompositeOperation="destination-in";

    window.open(ctx2.canvas.toDataURL('img/png'));
}






</script>

</body></html>
